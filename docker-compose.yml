version: '3.8'

services:
  eureka-server:
    build:
      context: ./eureka
      dockerfile: ./eureka/Dockerfile
    image: eureka-server-img
    ports:
      - "8761:8761"
    networks:
      - spring_network
    environment:
      - HOSTNAME=localhost
    depends_on:
      - config-server

  auth-service:
    build:
      context: ./auth
      dockerfile: ./auth/Dockerfile
    image: auth-service-img
    ports:
      - "9000:9000"
    networks:
      - spring_network
    depends_on:
      - eureka-server
      - config-server
      - postgres

  config-server:
    build:
      context: ./config-server
      dockerfile: ./config-server/Dockerfile
    image: config-server-img
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - GITHUB_TOKEN=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
    networks:
      - spring_network

  order-service:
    build:
      context: ./orders
      dockerfile: ./orders/Dockerfile
    image: order-service-img
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - spring_network
    depends_on:
      - config-server
      - eureka-server
      - postgres

  payment-service:
    build:
      context: ./payment
      dockerfile: ./payment/Dockerfile
    image: payment-service-img
    ports:
      - "8081:8081"
    networks:
      - spring_network
    depends_on:
      - eureka-server
      - config-server
      - postgres
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=postgres
    volumes:
      - ./initial-script.sql:/docker-entrypoint-initdb.d/initial-script.sql
networks:
  spring_network:
    driver: bridge